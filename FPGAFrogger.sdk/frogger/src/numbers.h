// Auto-generated 8x8 number sprites for scoring
#pragma once
#include <stdint.h>

#define NUM_DIGITS 10
#define DIGIT_W 8
#define DIGIT_H 8

// Using color 0xE for the number pixels (bright/white) and 0x0 for background (transparent/black)
static const uint8_t numbers[NUM_DIGITS][DIGIT_W * DIGIT_H] = {
  /* digit 0 */ {
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0xE, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0xE, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0xE, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0xE, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0
  },
  /* digit 1 */ {
    0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0x0, 0xE, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0xE, 0xE, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0,
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE
  },
  /* digit 2 */ {
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0xE, 0xE, 0xE, 0x0,
    0x0, 0x0, 0xE, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE
  },
  /* digit 3 */ {
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0x0, 0x0, 0xE, 0xE, 0xE, 0xE, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0xE, 0xE, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0
  },
  /* digit 4 */ {
    0x0, 0x0, 0x0, 0x0, 0xE, 0xE, 0xE, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0xE, 0xE, 0x0,
    0x0, 0x0, 0xE, 0xE, 0x0, 0xE, 0xE, 0x0,
    0x0, 0xE, 0xE, 0x0, 0x0, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0xE, 0xE, 0x0,
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE, 0x0
  },
  /* digit 5 */ {
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0
  },
  /* digit 6 */ {
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0
  },
  /* digit 7 */ {
    0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE, 0x0,
    0x0, 0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0,
    0x0, 0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0,
    0x0, 0x0, 0xE, 0xE, 0x0, 0x0, 0x0, 0x0,
    0x0, 0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
  },
  /* digit 8 */ {
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0
  },
  /* digit 9 */ {
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE,
    0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0xE, 0xE, 0x0, 0x0, 0x0, 0x0, 0xE, 0xE,
    0x0, 0xE, 0xE, 0xE, 0xE, 0xE, 0xE, 0x0
  }
};